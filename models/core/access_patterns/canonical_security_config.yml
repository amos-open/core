# Canonical Layer Security Configuration
# Row-level and column-level security for canonical tables

security_policies:
  
  # Row-Level Security Policies
  row_level_security:
    
    # Fund-level access control
    fund_access_policy:
      description: "Users can only access data for funds they are authorized to see"
      applies_to:
        - fund
        - fund_snapshot
        - commitment
        - instrument
        - instrument_snapshot
        - facility
        - loan
        - loan_snapshot
        - loan_cashflow
        - opportunity
        - transaction
      filter_condition: |
        fund_id IN (
          SELECT fund_id 
          FROM canonical_user_access 
          WHERE user_name = CURRENT_USER()
            AND access_level IN ('READ', 'WRITE', 'ADMIN')
            AND (expiry_date IS NULL OR expiry_date >= CURRENT_DATE())
            AND is_active = TRUE
        )
    
    # Investment-level access (inherits from fund access)
    investment_access_policy:
      description: "Access to investment data based on fund permissions"
      applies_to:
        - instrument_snapshot
        - share_class
        - shareholder
        - investment_round
        - company_valuation
        - company_dividend_forecast
      filter_condition: |
        investment_id IN (
          SELECT i.id 
          FROM investment i
          JOIN canonical_user_access ua ON i.fund_id = ua.fund_id
          WHERE ua.user_name = CURRENT_USER()
            AND ua.access_level IN ('READ', 'WRITE', 'ADMIN')
            AND (ua.expiry_date IS NULL OR ua.expiry_date >= CURRENT_DATE())
            AND ua.is_active = TRUE
        )
  
  # Column-Level Security (Data Masking)
  column_level_security:
    
    # Investor information masking
    investor_name_masking:
      description: "Mask investor names based on user role"
      applies_to:
        - table: investor
          column: name
      masking_policy: |
        CASE 
          WHEN CURRENT_ROLE() IN ('INVESTOR_RELATIONS', 'COMPLIANCE_OFFICER', 'CANONICAL_ADMIN') 
            THEN val
          WHEN CURRENT_ROLE() IN ('PORTFOLIO_MANAGER', 'ANALYST')
            THEN 'LP_' || RIGHT(SHA2(val), 6)
          ELSE '***MASKED***'
        END
    
    # Financial amount masking for external users
    financial_amount_masking:
      description: "Mask or aggregate financial amounts for external access"
      applies_to:
        - table: fund_snapshot
          columns: [total_nav, total_commitment, total_called, total_distributed]
        - table: instrument_snapshot
          columns: [fair_value, amortized_cost, equity_stake_pct, principal_outstanding]
        - table: loan_snapshot
          columns: [outstanding_principal, total_exposure, provision_amount]
        - table: transaction
          columns: [amount]
        - table: loan_cashflow
          columns: [principal_amount, interest_amount, total_amount]
      masking_policy: |
        CASE 
          WHEN CURRENT_ROLE() IN ('FUND_ADMIN', 'FINANCE_TEAM', 'CANONICAL_ADMIN') 
            THEN val
          WHEN CURRENT_ROLE() IN ('EXTERNAL_AUDITOR', 'REGULATOR')
            THEN ROUND(val / 1000000, 1)  -- Show in millions
          WHEN CURRENT_ROLE() IN ('BOARD_MEMBER')
            THEN ROUND(val / 10000000, 1) * 10000000  -- Round to nearest 10M
          ELSE NULL
        END
    
    # Counterparty information masking
    counterparty_masking:
      description: "Mask counterparty names for competitive sensitivity"
      applies_to:
        - table: counterparty
          column: name
      masking_policy: |
        CASE 
          WHEN CURRENT_ROLE() IN ('FUND_ADMIN', 'COMPLIANCE_OFFICER', 'CANONICAL_ADMIN') 
            THEN val
          WHEN CURRENT_ROLE() IN ('PORTFOLIO_MANAGER', 'ANALYST')
            THEN 'Counterparty_' || RIGHT(SHA2(val), 6)
          ELSE '***MASKED***'
        END

# Access Control Tables
access_control_tables:
  
  canonical_user_access:
    description: "Manages user access to funds in the canonical layer"
    columns:
      - name: user_name
        type: VARCHAR(255)
        description: "Database username or service account"
      - name: fund_id
        type: UUID
        description: "Fund identifier from canonical fund table"
      - name: access_level
        type: VARCHAR(20)
        description: "Access level: READ, WRITE, ADMIN"
      - name: granted_by
        type: VARCHAR(255)
        description: "Who granted this access"
      - name: granted_date
        type: TIMESTAMP
        description: "When access was granted"
      - name: expiry_date
        type: DATE
        description: "When access expires (NULL for permanent)"
      - name: is_active
        type: BOOLEAN
        description: "Whether access is currently active"
      - name: business_justification
        type: TEXT
        description: "Business reason for access"
    constraints:
      - "PRIMARY KEY (user_name, fund_id)"
      - "FOREIGN KEY (fund_id) REFERENCES fund(id)"
      - "CHECK (access_level IN ('READ', 'WRITE', 'ADMIN'))"
  
  canonical_audit_log:
    description: "Audit trail for canonical layer access"
    columns:
      - name: audit_id
        type: UUID
        description: "Unique audit record identifier"
      - name: user_name
        type: VARCHAR(255)
        description: "User who accessed the data"
      - name: table_name
        type: VARCHAR(100)
        description: "Canonical table accessed"
      - name: operation
        type: VARCHAR(20)
        description: "Operation performed (SELECT, INSERT, UPDATE, DELETE)"
      - name: row_count
        type: INTEGER
        description: "Number of rows affected"
      - name: fund_ids_accessed
        type: TEXT
        description: "JSON array of fund IDs accessed"
      - name: access_timestamp
        type: TIMESTAMP
        description: "When the access occurred"
      - name: session_id
        type: VARCHAR(255)
        description: "Database session identifier"
      - name: query_hash
        type: VARCHAR(64)
        description: "Hash of the executed query"

# Role Definitions
canonical_roles:
  
  CANONICAL_READ:
    description: "Read-only access to canonical tables with RLS filtering"
    permissions:
      - "SELECT on all canonical tables"
      - "Subject to row-level security policies"
      - "Subject to column-level masking policies"
    
  CANONICAL_WRITE:
    description: "Write access for data pipeline processes"
    permissions:
      - "SELECT, INSERT, UPDATE on canonical tables"
      - "Subject to row-level security policies"
      - "Bypass column masking for data processing"
    
  CANONICAL_ADMIN:
    description: "Full administrative access for data engineering"
    permissions:
      - "Full access to all canonical tables"
      - "Bypass all security policies"
      - "Manage access control tables"
      - "View audit logs"
    
  CANONICAL_AUDIT:
    description: "Audit access for compliance monitoring"
    permissions:
      - "SELECT on all canonical tables"
      - "Full access to audit logs"
      - "Bypass column masking for audit purposes"

# Recommended Connection Patterns
connection_patterns:
  
  direct_sql_access:
    description: "Direct SQL access to canonical tables"
    security_model: "Row-level and column-level security applied"
    use_cases:
      - "Ad-hoc analysis by authorized users"
      - "Downstream mart development"
      - "Compliance reporting"
    
  api_access:
    description: "Structured API access with additional business logic"
    security_model: "API-level authentication plus canonical security"
    use_cases:
      - "Application integration"
      - "External system access"
      - "Mobile and web applications"
    
  service_account_access:
    description: "Automated access for data pipelines and processes"
    security_model: "Service account permissions with audit logging"
    use_cases:
      - "ETL processes"
      - "Automated reporting"
      - "Data synchronization"

# Data Quality and Monitoring
data_quality_integration:
  
  security_monitoring:
    - "Monitor access patterns for anomalies"
    - "Alert on unauthorized access attempts"
    - "Track data export volumes"
    - "Monitor privilege escalation"
  
  compliance_reporting:
    - "Regular access reviews"
    - "Data lineage for sensitive information"
    - "Audit trail completeness validation"
    - "Security policy compliance checks"