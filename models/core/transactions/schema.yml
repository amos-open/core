version: 2

models:
  - name: transaction
    description: |
      **Unified Transaction Model - All Financial Transactions**
      
      Comprehensive transaction model capturing all financial movements across funds, instruments, and commitments.
      Supports both equity and loan transactions through a unified interface with instrument-centric design.
      
      **Instrument-Centric Design:**
      - Links to unified instrument table for both equity and loan transactions
      - Transaction types cover equity (investments, dividends, exits) and loan (draws, repayments, interest)
      - Flexible reference structure supports fund-level, instrument-level, and commitment-level transactions
      - Facility_id reference prepared for future PC package integration
      
      **Transaction Type Coverage:**
      - **Fund-level:** DRAWDOWN, DISTRIBUTION, MANAGEMENT_FEE, EXPENSE
      - **Equity instruments:** INVESTMENT_TRANSACTION, DIVIDEND
      - **Loan instruments:** LOAN_RECEIVED, LOAN_DRAW, LOAN_PRINCIPAL_REPAYMENT, LOAN_INTEREST_RECEIPT, LOAN_FEE_RECEIPT
      
      **Common BI Use Cases:**
      - Cashflow analysis across all transaction types
      - Fund-level transaction reporting and reconciliation
      - Instrument-specific transaction tracking
      - Performance calculation inputs (contributions, distributions, income)
      - Audit trail and transaction lineage
      
      **Key Relationships:**
      - Join with fund for fund-level transaction analysis
      - Join with instrument for instrument-specific transactions
      - Join with commitment for investor-related transactions
      - Join with counterparty for external party transactions
      
      **Query Patterns:**
      ```sql
      -- Equity instrument transactions
      SELECT t.*, i.instrument_type
      FROM transaction t
      JOIN instrument i ON t.instrument_id = i.id
      WHERE i.instrument_type = 'EQUITY'
      
      -- Fund cashflows by type
      SELECT transaction_type, SUM(amount) as total_amount
      FROM transaction
      WHERE fund_id = 'specific_fund_id'
      GROUP BY transaction_type
      ```
      
      **Refresh Schedule:** Real-time with transaction processing
    config:
      contract:
        enforced: true
    columns:
      - name: id
        description: "Unique identifier for the transaction"
        data_type: varchar(36)
        constraints:
          - type: not_null
          - type: primary_key
        tests:
          - unique
          - not_null

      - name: fund_id
        description: "Foreign key reference to the fund table"
        data_type: varchar(36)
        constraints:
          - type: not_null
        tests:
          - not_null
          - relationships:
              to: ref('fund')
              field: id

      - name: instrument_id
        description: "Optional foreign key reference to the instrument table"
        data_type: varchar(36)
        constraints:
        tests:
          - relationships:
              to: ref('instrument')
              field: id
              config:
                where: "instrument_id IS NOT NULL"

      - name: facility_id
        description: "Optional foreign key reference to the facility table (handled in PC package)"
        data_type: varchar(36)

      - name: commitment_id
        description: "Optional foreign key reference to the commitment table"
        data_type: varchar(36)
        tests:
          - relationships:
              to: ref('commitment')
              field: id
              config:
                where: "commitment_id IS NOT NULL"

      - name: transaction_type
        description: "Type of transaction (DRAWDOWN, DISTRIBUTION, DIVIDEND, etc.)"
        data_type: varchar(30)
        constraints:
          - type: not_null
        tests:
          - not_null
          - accepted_values:
              values: ['DRAWDOWN', 'DISTRIBUTION', 'DIVIDEND', 'INVESTMENT_TRANSACTION', 'EXPENSE', 'MANAGEMENT_FEE', 'LOAN_RECEIVED', 'LOAN_DRAW', 'LOAN_PRINCIPAL_REPAYMENT', 'LOAN_INTEREST_RECEIPT', 'LOAN_FEE_RECEIPT']
              quote: true

      - name: transaction_date
        description: "Date when the transaction occurred"
        data_type: date
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: amount
        description: "Transaction amount in the specified currency"
        data_type: decimal(18,2)
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: currency_code
        description: "ISO 3-letter currency code"
        data_type: varchar(3)
        constraints:
          - type: not_null
        tests:
          - not_null
          - relationships:
              to: ref('currency')
              field: code

      - name: description
        description: "Optional description of the transaction"
        data_type: varchar(500)

      - name: reference_number
        description: "Optional external reference number"
        data_type: varchar(100)

      - name: counterparty_id
        description: "Optional foreign key reference to the counterparty table"
        data_type: varchar(36)
        tests:
          - relationships:
              to: ref('counterparty')
              field: id
              config:
                where: "counterparty_id IS NOT NULL"

      - name: created_at
        description: "Timestamp when the record was created"
        data_type: timestamp_ntz
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: updated_at
        description: "Timestamp when the record was last updated"
        data_type: timestamp_ntz
        constraints:
          - type: not_null
        tests:
          - not_null
  - name: instrument_cashflow
    description: |
      **Unified Instrument Cashflows - Instrument-Level Financial Flows**
      
      Instrument-specific cashflow tracking for all instrument types with unified interface.
      Provides detailed cashflow analysis at the instrument level for both equity and loan instruments.
      
      **Instrument-Centric Design:**
      - Single table for all instrument type cashflows
      - Links to unified instrument table for instrument context
      - Optional transaction linkage for audit trail
      - Cashflow types cover equity and loan-specific flows
      
      **Cashflow Type Coverage:**
      - **Equity instruments:** CONTRIBUTION, DISTRIBUTION, DIVIDEND
      - **Loan instruments:** DRAW, PRINCIPAL, INTEREST, FEE, PREPAYMENT
      - **All instruments:** OTHER (for miscellaneous flows)
      
      **Common BI Use Cases:**
      - Instrument-level cashflow analysis and performance calculation
      - IRR and multiple calculation inputs
      - Cashflow timing analysis by instrument type
      - Performance attribution at instrument level
      
      **Key Relationships:**
      - Join with instrument to get instrument type and details
      - Join with transaction for transaction-level detail (when available)
      - Join with currency for multi-currency analysis
      
      **Query Patterns:**
      ```sql
      -- Equity instrument cashflows
      SELECT ic.*, i.instrument_type
      FROM instrument_cashflow ic
      JOIN instrument i ON ic.instrument_id = i.id
      WHERE i.instrument_type = 'EQUITY'
      
      -- Loan interest and principal flows
      SELECT cashflow_type, SUM(amount) as total_amount
      FROM instrument_cashflow ic
      JOIN instrument i ON ic.instrument_id = i.id
      WHERE i.instrument_type = 'LOAN' 
        AND ic.cashflow_type IN ('INTEREST', 'PRINCIPAL')
      GROUP BY cashflow_type
      ```
      
      **Refresh Schedule:** Daily with transaction processing
    config:
      contract:
        enforced: true
    columns:
      - name: id
        description: "Unique identifier for the cashflow record"
        data_type: varchar(36)
        constraints:
          - type: not_null
          - type: primary_key
        tests:
          - unique
          - not_null

      - name: instrument_id
        description: "Foreign key reference to the instrument table"
        data_type: varchar(36)
        constraints:
          - type: not_null
        tests:
          - not_null
          - relationships:
              to: ref('instrument')
              field: id

      - name: transaction_id
        description: "Optional foreign key reference to the transaction table"
        data_type: varchar(36)
        tests:
          - relationships:
              to: ref('transaction')
              field: id
              config:
                where: "transaction_id IS NOT NULL"

      - name: cashflow_type
        description: "Type of cashflow (CONTRIBUTION, DISTRIBUTION, DIVIDEND, etc.)"
        data_type: varchar(20)
        constraints:
          - type: not_null
        tests:
          - not_null
          - accepted_values:
              values: ['CONTRIBUTION', 'DISTRIBUTION', 'DIVIDEND', 'INTEREST', 'FEE', 'PRINCIPAL', 'DRAW', 'PREPAYMENT', 'OTHER']
              quote: true

      - name: cashflow_date
        description: "Date when the cashflow occurred"
        data_type: date
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: amount
        description: "Cashflow amount in the specified currency"
        data_type: decimal(18,2)
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: currency_code
        description: "ISO 3-letter currency code"
        data_type: varchar(3)
        constraints:
          - type: not_null
        tests:
          - not_null
          - relationships:
              to: ref('currency')
              field: code

      - name: description
        description: "Optional description of the cashflow"
        data_type: varchar(500)

      - name: created_at
        description: "Timestamp when the record was created"
        data_type: timestamp_ntz
        constraints:
          - type: not_null
        tests:
          - not_null

      - name: updated_at
        description: "Timestamp when the record was last updated"
        data_type: timestamp_ntz
        constraints:
          - type: not_null
        tests:
          - not_null